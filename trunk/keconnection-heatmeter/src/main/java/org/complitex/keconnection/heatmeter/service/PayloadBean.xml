<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.complitex.keconnection.heatmeter.service.PayloadBean">
    <resultMap id="payloadResultMap" type="org.complitex.keconnection.heatmeter.entity.Payload">
        <id property="id"/>
        <result property="tablegramId"/>
        <result property="parentId"/>
        <result property="heatmeterId"/>
        <result property="beginDate"/>
        <result property="endDate"/>
        <result property="operatingMonth"/>
        <result property="ls"/>
        <result property="name"/>
        <result property="address"/>
        <result property="payload1"/>
        <result property="payload2"/>
        <result property="payload3"/>
        <result property="status"/>
    </resultMap>

    <insert id="insertPayload" parameterType="org.complitex.keconnection.heatmeter.entity.Payload"
        useGeneratedKeys="true" keyProperty="id">
        insert into `payload` (`tablegram_id`, `parent_id`, `heatmeter_id`, `begin_date`, `end_date`, `operating_month`,
          `ls`, `name`, `address`, `payload1`, `payload2`, `payload3`, `status`)
        values (#{tablegramId}, #{parentId}, #{heatmeterId}, #{beginDate}, #{endDate}, #{operatingMonth},
          #{ls}, #{name}, #{address}, #{payload1}, #{payload2}, #{payload3}, #{status})
    </insert>

    <update id="updatePayload" parameterType="org.complitex.keconnection.heatmeter.entity.Payload">
        update `payload` set `parent_id` = #{parentId}, `heatmeter_id` = #{heatmeterId}, `begin_date` = #{beginDate},
          `end_date` = #{endDate}, `operating_month` = #{operatingMonth}, `ls` = #{ls}, `name` = #{name},
          `address` = #{address}, `payload1` = #{payload1}, `payload2` = #{payload2}, `payload3` = #{payload3},
          `status` = #{status}
        where `id` = #{id}
    </update>

    <update id="updatePayloadParent" parameterType="map">
        update `payload` set `parent_id` = #{parentId} where `id` = #{id}
    </update>

    <select id="selectPayload" parameterType="long" resultMap="payloadResultMap">
        select * from `payload` where `id` = #{id}
    </select>

    <sql id="selectPayloadFromWhere">
        from `payload` p
        <where>
            p.`tablegram_id` = #{object.tablegramId}

            <if test="object.beginDate != null">and p.`begin_date` = #{object.beginDate}</if>
            <if test="object.endDate != null">and p.`end_date` = #{object.endDate}</if>
            <if test="object.operatingMonth != null">and p.`operating_month` = #{object.operatingMonth}</if>
            <if test="object.ls != null">and p.`ls` = #{object.ls}</if>
            <if test="object.name != null">and p.`name` = #{object.name}</if>
            <if test="object.address != null">and p.`address` = #{object.address}</if>
            <if test="object.payload1 != null">and p.`payload1` = #{object.payload1}</if>
            <if test="object.payload2 != null">and p.`payload2` = #{object.payload2}</if>
            <if test="object.payload3 != null">and p.`payload3` = #{object.payload3}</if>
            <if test="object.status != null">and p.`status` = #{object.status}</if>
        </where>
    </sql>

    <select id="selectPayloads" parameterType="org.complitex.dictionary.entity.FilterWrapper" resultMap="payloadResultMap">
        select p.* <include refid="selectPayloadFromWhere"/>
          order by ${sortProperty} ${asc} limit #{first}, #{count}
    </select>

    <select id="selectPayloadsCount" parameterType="org.complitex.dictionary.entity.FilterWrapper" resultType="int">
        select count(*) <include refid="selectPayloadFromWhere"/>
    </select>

    <select id="isExistPayload" parameterType="long" resultType="boolean">
        select count(*) > 0 from `payload` where `heatmeter_id` = #{heatmeterId}
    </select>

    <select id="selectPayloadsByTablegramId" parameterType="long" resultMap="payloadResultMap">
        select * from `payload` where `tablegram_id` = #{tablegramId}
    </select>
</mapper>